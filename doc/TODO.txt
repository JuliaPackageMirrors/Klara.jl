Ongoing TODO List
==================================================

01) Test if execution speed is affected by size of user-defined type (see if additional fields affect speed)
Answer: Try

Done: 02) zero(Int) in parameter-related constructors

Done: 03) Find out if is possible to define parameteric type by passing the parameter as an argument (as in ::Type{N})

Answer to 03):
```
type State{T<:Number}
  x::Number
end

State{T<:Number}(::Type{T}) = convert(T, NaN)

State(Float32)
```

Older (Pending) TODO List
==================================================

01) Write up readthedocs package documentation (and then point README to the new documentation)
02) Write up travis test suite (this partly depends on (06) below)
03) Organize examples directory (and possibly migrate some examples to the documentation)
04) Add data dictionary field in model types
05) Output improvements
  05.01) Add merge method for merging MCChain's (useful for resuming jobs)
  05.02) Consider adding save function field in job types to abstract the way output is stored in MCChain
  05.03) Consider optionally writing output in files (useful with population MCMC to reduce memory requirements)
06) Implement MCMC summary statistics and MCMC convergence diagnostics that require spectral computations
07) Iterate with spencerlyon2 and fredo-dedup in order to set up Gibbs sampling
08) Implement parallel population MCMC
09) MCMC for hierarchical models (constrained Monte Carlo)
10) Extend autodiff capabilities for MCMC samplers that need higher order derivatives
11) Performance considerations
  11.01) Consider using copy!() instead of copy() in samplers
  11.02) Make algebraic changes in samplers to speed them up
12) Craft a package log
